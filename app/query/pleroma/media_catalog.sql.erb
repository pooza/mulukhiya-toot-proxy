<%# encoding: UTF-8 -%>
SELECT
  attachments.id,
  attachments.uri,
  attachments.type,
  statuses.id AS status_id,
  statuses.uri AS status_uri,
  statuses.username,
  statuses.host,
  statuses.created_at
FROM
  (
    SELECT
      objects_base.id,
      objects_base.data->>'id' AS uri,
      jsonb_array_elements(objects_base.data->'attachment')->'url'->0->'href'->>0 AS attachment_uri,
      objects_actor.actor[5] AS username,
      objects_actor.actor[3] AS host,
      objects_base.inserted_at AS created_at
    FROM
      objects AS objects_base
      INNER JOIN (
        SELECT
          id,
          regexp_split_to_array(data->>'actor', '/') AS actor
        FROM
          objects
        WHERE (data->>'actor' IS NOT null)
      ) AS objects_actor ON objects_base.id = objects_actor.id
      INNER JOIN users ON objects_actor.actor[5] = users.nickname
    WHERE (objects_base.data->'attachment'->0->'url' IS NOT null)
      <% if params[:q] -%>
        AND ((objects_base.data->'content')::varchar LIKE '%<%= params[:q] %>%')
      <% end -%>
      AND (users.actor_type = 'Person')
      AND (users.local = true)
      AND (users.invisible = false)
    ORDER BY
      objects_base.id DESC
  ) AS statuses
  INNER JOIN (
    SELECT
      max(id) AS id,
      uri,
      max(type) AS type,
      max(created_at) AS created_at
    FROM
      (
        SELECT
          id,
          data->'url'->0->>'href' AS uri,
          data->'url'->0->>'mediaType' AS type,
          inserted_at AS created_at
        FROM
          objects
        WHERE (data->>'mediaType' IS NOT null)
      ) AS t
    GROUP BY
      uri
    ORDER BY
      created_at DESC
  ) AS attachments ON statuses.attachment_uri = attachments.uri
ORDER BY
  created_at DESC
LIMIT <%= params[:limit] %> OFFSET <%= params[:page] ? ((params[:page] - 1) * params[:limit]) : 0 %>
