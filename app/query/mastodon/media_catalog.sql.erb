SELECT
  attachments.id,
  attachments.file_file_name AS name,
  attachments.file_content_type AS type,
  attachments.file_file_size AS file_size,
  attachments.file_meta AS meta,
  attachments.description,
  attachments.created_at,
  toots.id AS status_id,
  toots.text AS status_text,
  toots.visibility,
  accounts.username,
  accounts.display_name
FROM
  media_attachments AS attachments
  INNER JOIN statuses AS toots ON attachments.status_id = toots.id
  INNER JOIN accounts ON toots.account_id = accounts.id
WHERE (toots.local = true)
  AND (toots.reblog_of_id IS null)
  AND (toots.visibility < 2)
  AND (toots.deleted_at IS null)
  <% if params[:rule] %>
    <% params[:rule].keywords.each do |keyword| %>
      AND (concat_ws(E'\t', toots.text, toots.spoiler_text, attachments.description) LIKE '%<%= keyword %>%')
    <% end %>
    <% params[:rule].negative_keywords.each do |keyword| %>
      AND (coalesce(toots.text, '') NOT LIKE '%<%= keyword %>%')
      AND (coalesce(toots.spoiler_text, '') NOT LIKE '%<%= keyword %>%')
      AND (coalesce(attachments.description, '') NOT LIKE '%<%= keyword %>%')
    <% end %>
  <% end %>
  <% unless params[:only_person].to_i.zero? %>
    AND ((accounts.actor_type = 'Person') OR (accounts.actor_type IS null))
  <% end %>
  AND (accounts.silenced_at IS null)
  AND (accounts.suspended_at IS null)
  <% if test_account %>
    AND (accounts.id <> '<%= test_account.id %>')
  <% end %>
ORDER BY
  attachments.id DESC
LIMIT <%= params[:limit] %> OFFSET <%= params[:page] ? ((params[:page] - 1) * params[:limit]) : 0 %>
