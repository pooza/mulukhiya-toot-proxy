doctype html
html lang='ja'
  head
    == slim.render 'fragment/metadata'
    == slim.render 'fragment/assets'
  body
    == slim.render 'fragment/header'
    == slim.render 'fragment/breadcrumbs', {entries: [{label: 'モロヘイヤHOME', href: '/mulukhiya'}, {label: controller.status_label}]}
    main#app class=env.type
      == slim.render 'fragment/message'
      h2 = controller.status_label
      - if controller.account_timeline?
        nav.search-form-container v-if='account.username'
          .control
            i class='fa fa-magnifying-glass'
            input type='search' placeholder='検索フレーズ' autocomplete="on" list="suggested_keywords" v-model.trim='keyword' @keydown.enter='searchStatuses'
            datalist id='suggested_keywords'
              option v-for='keyword in suggested_keywords' {{keyword}}
            button.small @click='searchStatuses' 検索
          .control
            label
              input type='checkbox' v-model='self'
              | 自分の#{controller.status_label}のみ
        article.status v-for='(status, id) in statuses' v-if='account.username'
          .visibility
            i :class="'fa fa-' + status.visibility_icon" v-tooltip.left='status.visibility_name'
          .header
            i class='fa fa-id-badge'
            a :href='status.webui_url' = '{{status.id}}'
          .header
            i class='fa fa-calendar'
            | {{status.created_at}}
          .header v-if='status.spoiler_text'
            i class='fa fa-circle-exclamation'
            | {{status.spoiler_text}}
          .header
            i class='fas fa-user'
            | {{status.account.display_name || '@' + status.account.username}}
          pre.body v-if='status.body' = '{{status.body}}'
          nav.footer-navigations v-if='status.is_taggable && account.username==status.account.username'
            h4
              i class='fa fa-tag'
              | タグづけ
            - if controller.delete_and_tagging?
              ul
                li
                  i class='fa fa-tag'
                  a :href="'/mulukhiya/app/status/' + status.id" 削除してタグづけ
            - else
              .tag v-for='tag in status.footer_tags'
                | {{tag.name}}
                a href='javascript:void(0)' v-if='tag.is_deletable' @click='deleteTag(status.id, tag.name)'
                  i class='fa fa-xmark'
              .tag
                | 新規タグを追加
                a href='javascript:void(0)' @click='createTag(status.id)'
                  i class='fa fa-pencil'
          nav.footer-navigations v-if='(status.is_nowplaying || status.is_poipiku) && (account.username==status.account.username)'
            h4
              i class='fa fa-bolt'
              | その他の操作
            ul
              li v-if='status.is_nowplaying'
                i class='fa fa-music'
                a :href="'/mulukhiya/app/status/' + (status.id || '(null)') + '/nowplaying'" ナウプレ
              - if controller.poipiku?
                li v-if='status.is_poipiku'
                  i class='fa fa-image'
                  a :href="'/mulukhiya/app/status/' + (status.id || '(null)') + '/poipiku'" ポイピク
        nav.appender-container v-if='!last_page && account.username'
          a @click='appendStatuses' 続きを読む…
      - else
        article.status #{controller.display_name}は一覧表示に対応していません。
    javascript:
      'use strict'
      Vue.use(VTooltip, {delay: 0, autoHide:true})
      Vue.use(MulukhiyaLib)
      Vue.use(window.VuejsDialog.main.default, {okText: '了解', cancelText: 'キャンセル'})
      new Vue({
        el: '#app',
        data: {
          account: {is_admin: false, username: null},
          statuses: {},
          suggested_keywords: Vue.getSuggestedKeywords(),
          self: true,
          page: 0,
          keyword: null,
          last_page: false,
        },
        mounted () {
          Vue.getConfig()
            .then(e => {
              this.account = Vue.createAccountInfo(e)
              if (this.account.username) {this.appendStatuses()}
            }).catch(e => Vue.alert(this.$dialog, e))
        },
        methods: {
          createTag (id) {
            this.$dialog
              .prompt({title: '新規タグを作成'}, {promptHelp: 'タグの名前を入力して、作成ボタンを押下してください。', okText: '作成'})
              .then(e => Vue.createTag(id, e.data))
              .then(e => Vue.set(this.statuses, e.id, e))
              .catch(e => Vue.alert(this.$dialog, e))
          },
          deleteTag (id, tag) {
            Vue.deleteTag(id, tag)
              .then(e => Vue.set(this.statuses, e.id, e))
              .catch(e => Vue.alert(this.$dialog, e))
          },
          searchStatuses () {
            this.page = 0
            this.statuses = {}
            this.last_page = false
            setTimeout(this.appendStatuses, 500)
          },
          appendStatuses () {
            this.page ++
            Vue.getStatuses({page: this.page, q: this.keyword, self: this.self})
              .then(e => {
                this.suggested_keywords = Vue.getSuggestedKeywords()
                if (0 < e.length) {
                  e.map(v => {Vue.set(this.statuses, v.id, v)})
                } else {
                  this.last_page = true
                  this.$dialog.alert('#{controller.status_label}はこれ以上ありません。')
                }
              }).catch(e => Vue.alert(this.$dialog, e))
          },
        },
      })
