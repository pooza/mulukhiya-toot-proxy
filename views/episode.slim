doctype html
html lang='ja'
  head
    == slim.render 'fragment/metadata'
    == slim.render 'fragment/assets'
  body
    == slim.render 'fragment/header'
    == slim.render 'fragment/breadcrumbs', {entries: [{label: 'モロヘイヤHOME', href: '/mulukhiya'}, {label: 'エピソードブラウザ'}]}
    main#app class=env.type
      == slim.render 'fragment/message'
      h2 エピソードブラウザ
      nav.search-form-container v-if='account.username'
        .control
          i class='fa fa-magnifying-glass'
          input type='search' placeholder='作品名検索フレーズ' v-model.trim='keyword' @keydown.enter='getWorks'
          button.small @click='getWorks' 検索
      article.episode v-for='work in works'
        h3
          i class='fas fa-clipboard' v-tooltip.right="'クリップボードにコピー'" data-clipboard-target="'#work-title-' + work.annictId"
          span :id="'work-title-' + work.annictId" v-tooltip.bottom="'エピソードを' + (layout[work.annictId] ? '閉じる' : '開く')" @mouseenter="prefetchEpisodes(work.annictId)" @click="toggleEpisodes(work.annictId)"
            | {{work.title}}
          ul.params class='clearfix'
            li.param v-if='work.seasonYear'
              i class='fa fa-calendar'
              | {{work.seasonYear}}年
            li.param v-if='work.officialSiteUrl'
              i class='fa fa-globe'
              a :href='work.officialSiteUrl' target='_blank' rel='noreferrer' 公式サイト
        slide-up-down :active="layout[work.annictId] && episodes[work.annictId]"
          .episode-container
            ul.episodes v-if='episodes[work.annictId]?.length'
              li.episode v-for='episode in episodes[work.annictId]'
                strong.number-text
                  | {{episode.numberText}}
                .link-container
                  i class='fas fa-clipboard' v-tooltip.right="'クリップボードにコピー'" :data-clipboard-target="'#episode-title-' + work.annictId + '-' + episode.annictId"
                  span.title :id="'episode-title-' + work.annictId + '-' + episode.annictId"
                    | {{episode.title}}
                .link-container
                  i class='fas fa-clipboard' v-tooltip.right="'クリップボードにコピー'" :data-clipboard-target="'#episode-hashtag-' + work.annictId + '-' + episode.annictId"
                  span.hashtag :id="'episode-hashtag-' + work.annictId + '-' + episode.annictId"
                    | {{episode.hashtag}}
                .link-container v-if='episode.command_toot'
                  i class='fas fa-clipboard' v-tooltip.right="'クリップボードにコピー'" @click='notifyCommandToot()' :data-clipboard-target="'#episode-command-' + work.annictId + '-' + episode.annictId"
                  | 実況コマンド
                  textarea :id="'episode-command-' + work.annictId + '-' + episode.annictId" {{episode.command_toot}}
                .bubble-container v-if='episode.hashtag_url'
                  a :href='episode.hashtag_url' target='_blank' rel='noreferrer' v-if='episode.hashtag_url'
                    i class='fas fa-comment'
                  | タイムライン
            ul.episodes v-else=''
              li.episode
                .link-container
                  i class='fas fa-clipboard' v-tooltip.right="'クリップボードにコピー'" :data-clipboard-target="'#episode-hashtag-' + work.annictId"
                  span.hashtag :id="'episode-hashtag-' + work.annictId"
                    | {{work.hashtag}}
                .link-container v-if='work.command_toot'
                  i class='fas fa-clipboard' v-tooltip.right="'クリップボードにコピー'" @click='notifyCommandToot()' :data-clipboard-target="'#episode-command-' + work.annictId"
                  | 実況コマンド
                  textarea :id="'episode-command-' + work.annictId" {{work.command_toot}}
                .bubble-container v-if='work.hashtag_url'
                  a :href='work.hashtag_url' target='_blank' rel='noreferrer' v-if='work.hashtag_url'
                    i class='fas fa-comment'
                  | タイムライン
                .bubble-container v-if='work.command_url'
                  a :href='work.command_url' target='_blank' rel='noreferrer' v-if='work.command_url'
                    i class='fas fa-microphone'
                  | 実況開始
    == slim.render 'fragment/footer'
    javascript:
      'use strict'
      const app = Vue.createApp({
        data () {
          return {
            account: {is_admin: false, username: null},
            all_works: [],
            works: [],
            episodes: {},
            keyword: null,
            layout: {},
          }
        },
        mounted () {
          this.methods.getConfig()
            .then(e => {
              this.account = this.methods.createAccountInfo(e)
              this.disabled_tags = this.methods.dig(e, 'config', 'tagging', 'tags', 'disabled')
            }).catch(e => Swal.fire({text: e.message, icon: 'error'}))
          this.getWorks()
          new ClipboardJS('.episode i');
        },
        methods: {
          toggleEpisodes (id) {
            this.layout[id] = !this.layout[id]
          },
          prefetchEpisodes (id) {
            if (!this.episodes[id]) {
              this.methods.getEpisodes(id).then(e => {
                this.episodes[id] = e
              })
            }
          },
          getWorks () {
            setTimeout(() => {
              this.methods.getWorks({q: this.keyword})
                .then(e => {
                  this.works = e
                  this.works.map(w => this.layout[w.annictId] = false)
                }).catch(e => Swal.fire({text: e.message, icon: 'error'}))
            }, 500)
          },
          notifyCommandToot () {
            Swal.fire({
              title: '実況コマンドをクリップボードにコピーしました。',
              toast: true,
              position: 'top-end',
              icon: 'info',
              showConfirmButton: false,
              timer: 2000,
            })
          },
        },
      })
      app.use(window.MulukhiyaLib)
      app.component('slide-up-down', window.SlideUpDown)
      app.directive('tooltip', window.VTooltip);
      app.mount('#app')
