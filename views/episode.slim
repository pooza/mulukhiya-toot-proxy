doctype html
html lang='ja'
  head
    == slim.render 'fragment/metadata'
    == slim.render 'fragment/assets'
  body
    == slim.render 'fragment/header'
    == slim.render 'fragment/breadcrumbs', {entries: [{label: 'モロヘイヤHOME', href: '/mulukhiya'}, {label: 'エピソード'}]}
    main#app class=env.type
      == slim.render 'fragment/message'
      h2 エピソード
      article.episode v-for='work in works'
        h3 = '{{work.title}}'
        ul.params
          li.param AnnictID: {{work.annictId}}
          li.param 発表: {{work.seasonYear}}年
          li.param v-if='work.officialSiteUrl'
            a :href='work.officialSiteUrl' target='_blank' rel='noreferrer' v-if='work.officialSiteUrl' 公式サイト
    == slim.render 'fragment/footer'
    javascript:
      'use strict'
      Vue.use(MulukhiyaLib)
      Vue.use(window.VuejsDialog.main.default, {okText: '了解', cancelText: 'キャンセル'})
      new Vue({
        el: '#app',
        data: {
          account: {is_admin: false, username: null},
          works: [],
        },
        mounted () {
          Vue.getConfig()
            .then(e => {
              this.account = e.account
              this.disabled_tags = Vue.dig(e, 'config', 'tagging', 'tags', 'disabled')
            }).catch(e => Vue.alert(this.$dialog, e))
          Vue.getWorks()
            .then(e => {
              this.works = e
            }).catch(e => Vue.alert(this.$dialog, e))
        },
      })
