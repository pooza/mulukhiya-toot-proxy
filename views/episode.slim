doctype html
html lang='ja'
  head
    == slim.render 'fragment/metadata'
    == slim.render 'fragment/assets'
  body
    == slim.render 'fragment/header'
    == slim.render 'fragment/breadcrumbs', {entries: [{label: 'モロヘイヤHOME', href: '/mulukhiya'}, {label: 'エピソードブラウザ'}]}
    main#app class=env.type
      == slim.render 'fragment/message'
      h2 エピソードブラウザ
      nav.search-form-container v-if='account.username'
        .control
          i class='fa fa-magnifying-glass'
          input type='search' placeholder='作品名検索フレーズ' v-model.trim='keyword' @keydown.enter='getWorks'
          button.small @click='getWorks' 検索
      article.episode v-for='work in works'
        h3 = '{{work.title}}'
        .info
          ul.params class='clearfix'
            li.param AnnictID: {{work.annictId}}
            li.param v-if='work.seasonYear'
              i class='fa fa-calendar'
              | 発表: {{work.seasonYear}}年
            li.param v-if='work.officialSiteUrl'
              i class='fa fa-globe'
              a :href='work.officialSiteUrl' target='_blank' rel='noreferrer' v-if='work.officialSiteUrl' 公式サイト
        .episode-container
          div v-if='episodes[work.annictId]'
            ul.episodes v-if='episodes[work.annictId].length'
              li.episode v-for='episode in episodes[work.annictId]' v-if='episode.title'
                strong.number-text
                  | {{episode.numberText}}
                .link-container
                  i class='fas fa-clipboard' :data-clipboard-target="'#episode-title-' + work.annictId + '-' + episode.annictId"
                  span.title :id="'episode-title-' + work.annictId + '-' + episode.annictId"
                    | {{episode.title}}
                .link-container
                  i class='fas fa-clipboard' :data-clipboard-target="'#episode-hashtag-' + work.annictId + '-' + episode.annictId"
                  span.hashtag :id="'episode-hashtag-' + work.annictId + '-' + episode.annictId"
                    | {{episode.hashtag}}
                .bubble-container v-if='episode.hashtag_url'
                  a :href='episode.hashtag_url' target='_blank' rel='noreferrer' v-if='episode.hashtag_url'
                    i class='fas fa-comment'
                  | タイムライン
                - if env.mastodon_type?
                  .bubble-container v-if='episode.command_url'
                    a :href='episode.command_url' target='_blank' rel='noreferrer' v-if='episode.command_url'
                      i class='fas fa-microphone'
                    | 実況開始
            ul.episodes v-else=''
              li.episode
                .link-container
                  i class='fas fa-clipboard' :data-clipboard-target="'#episode-title-' + work.annictId"
                  span.title :id="'episode-title-' + work.annictId"
                    | {{work.title}}
                .link-container
                  i class='fas fa-clipboard' :data-clipboard-target="'#episode-hashtag-' + work.annictId"
                  span.hashtag :id="'episode-hashtag-' + work.annictId"
                    | {{work.hashtag}}
                .bubble-container v-if='work.hashtag_url'
                  a :href='work.hashtag_url' target='_blank' rel='noreferrer' v-if='work.hashtag_url'
                    i class='fas fa-comment'
                  | タイムライン
                .bubble-container v-if='work.command_url'
                  a :href='work.command_url' target='_blank' rel='noreferrer' v-if='work.command_url'
                    i class='fas fa-microphone'
                  | 実況開始
          nav v-else=''
            button.small @click='getEpisodes(work.annictId)' = 'エピソード取得'
    == slim.render 'fragment/footer'
    javascript:
      'use strict'
      Vue.use(MulukhiyaLib)
      Vue.use(window.VuejsDialog.main.default, {okText: '了解', cancelText: 'キャンセル'})
      new Vue({
        el: '#app',
        data: {
          account: {is_admin: false, username: null},
          all_works: [],
          works: [],
          episodes: {},
          keyword: null,
        },
        mounted () {
          Vue.getConfig()
            .then(e => {
              this.account = e.account
              this.disabled_tags = Vue.dig(e, 'config', 'tagging', 'tags', 'disabled')
            }).catch(e => Vue.alert(this.$dialog, e))
          this.getWorks()
          new ClipboardJS('.episode i');
        },
        methods: {
          getEpisodes (id) {
            Vue.getEpisodes(id)
              .then(e => Vue.set(this.episodes, id, e))
          },
          getWorks () {
            setTimeout(() => {
              Vue.getWorks({q: this.keyword})
                .then(e => {
                  this.works = e
                }).catch(e => Vue.alert(this.$dialog, e))
            }, 500)
          },
        },
      })
