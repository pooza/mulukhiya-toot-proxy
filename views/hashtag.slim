doctype html
html lang='ja'
  head
    == slim.render 'fragment/metadata'
    == slim.render 'fragment/assets'
  body
    == slim.render 'fragment/header'
    == slim.render 'fragment/breadcrumbs', {entries: [{label: 'モロヘイヤHOME', href: '/mulukhiya'}, {label: 'ハッシュタグ'}]}
    main#app class=env.type
      == slim.render 'fragment/message'
      h2 ハッシュタグ
      section.tagging-dictionary
        h3 タグを検索
        .total v-if='account.is_admin'
          | 登録済みのタグ
          = Mulukhiya::TaggingDictionary.new.count.commaize
          | 件
          .role admin
        nav.search-form-container
          i class='fa fa-magnifying-glass'
          input type='search' placeholder='検索フレーズ' v-model.trim='keyword' @keydown.enter='search'
          button.small :disabled='!keyword' @click='search' 検索
        article :class='{"tag-entry":true, "disabled":isDisabledTag(entry.word)}' v-for='entry in dic_entries'
          h4
            | {{entry.word}}
            span.alert v-if='entry.short' 未使用
          nav v-if='account.username'
            button.small :disabled='!isDisabledTag(entry.word)' @click='setTagStatus(entry.word, true)' 有効
            button.small :disabled='isDisabledTag(entry.word)' @click='setTagStatus(entry.word, false)' 無効
          ul
            li
              strong パターン
              code v-if='entry.regexp' = "/{{entry.regexp}}/"
            li
              strong タグ
              code v-for='tag in entry.tags' = "{{tag}} "
      - if controller.favorite_tags?
        section.fav-entries
          h3 プロフィールに含まれるタグ
          article.tag-entry v-for='(v, tag) in fav_entries'
            a :href='v.url' target='_blank' rel='noreferrer' = '#{{tag}}'
            span.count v-if='v.count' {{v.count}}
      section.remote-dics
        h3 辞書
        ul
          - Mulukhiya::RemoteDictionary.all do |dic|
            li
              h4 = dic.name
              .link-container
                a.url href=dic.uri target='_blank' rel='noreferrer' = dic.uri.to_s.ellipsize(64)
                - if dic.edit_uri
                  |&nbsp;
                  a.edit href=dic.edit_uri target='_blank' rel='noreferrer' v-if='account.username'
                    i class='fas fa-edit' v-tooltip.left="'辞書の編集'"
    == slim.render 'fragment/footer'
    javascript:
      'use strict'
      Vue.use(VTooltip)
      Vue.use(MulukhiyaLib)
      Vue.use(window.VuejsDialog.main.default, {okText: '了解', cancelText: 'キャンセル'})
      new Vue({
        el: '#app',
        data: {
          account: {is_admin: false, username: null},
          disabled_tags: [],
          keyword: null,
          dic_entries: {},
          fav_entries: [],
        },
        mounted () {
          Vue.getConfig()
            .then(e => {
              this.account = e.account
              this.disabled_tags = Vue.dig(e, 'config', 'tagging', 'tags', 'disabled')
            }).catch(e => Vue.alert(this.$dialog, e))
          Vue.getFavoriteTags()
            .then(e => {this.fav_entries = e})
            .catch(e => Vue.alert(this.$dialog, e))
        },
        methods: {
          search () {
            this.dic_entries = {}
            if (this.keyword == '') {return}
            Vue.searchTags(this.keyword)
              .then(e => {this.dic_entries = e})
              .catch(e => Vue.alert(this.$dialog, e))
          },
          isDisabledTag (tag) {
            this.disabled_tags = this.disabled_tags || []
            return this.disabled_tags.includes(tag)
          },
          setTagStatus (tag, flag) {
            const command = {tagging: {tags: {disabled: []}}}
            this.disabled_tags = this.disabled_tags || []
            if (flag) {
              this.disabled_tags = this.disabled_tags.filter(v => (v != tag))
              if (this.disabled_tags.length == 0) {this.disabled_tags = null}
            } else {
              this.disabled_tags.push(tag)
              this.disabled_tags = Array.from(new Set(this.disabled_tags))
            }
            command.tagging.tags.disabled = this.tags
            Vue.updateConfig(command)
          },
        },
      })
